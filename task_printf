#include "main.h"
/**
 * _printf - produces output according to a format
 * return: length of the formatted output string
*/

int _printf(const char *format, ...) 
{
	int (*qfunc)(va_list, flags_t *);
	const char *p;
	va_list arguments;
	flags_t flags = {0, 0, 0};

	register int count = 0;

	va_start(arguments, format);
	if (!format || (format[0] == '%' && !format[1]))
		return (-1);
	if (format[0] == '%' && format[1] == ' ' && !format[2])
		return (-1);
	for (q = format; *q; q++)
	{
		if (*q == '%')
		{
			q++;
			if (*q == '%')
			{
				count += _putchar('%');
				continue;
			}
			while (get_flag(*q, &flags))
				q++;
			qfunc = get_print(*q);
			count += (qfunc)
				? qfunc(arguments, &flags)
				: _printf("%%%c", *q);
		} else
			count += _putchar(*q);
	}
	_putchar(-1);
	va_end(arguments);
	return (count);
}

